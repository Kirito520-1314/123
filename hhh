#coding:gbk
"""
基于Python和Gelphi的《黎明破晓的街道》人物关系图谱构建
王志鸿
"""
import codecs
import jieba.posseg as pseg
import jieba

names = {}#保存人物,人物名称为键，该人物在全文中出现的次数为值
relationships = {}
lineNames = []#缓存变量
jieba.load_userdict("names.txt")#加载人物表
with codecs.open("黎明破晓的街道.txt", 'r', encoding='gbk') as f:
    for line in f.readlines():
        poss = pseg.cut(line)
        lineNames.append([])#增加人物列表
        for w in poss:
            if w.flag != 'nr' or len(w.word) < 2:
                continue#分词长度小于2或该词词性不为nr（人名）时认为该词不为人名
            lineNames[-1].append(w.word)#为当前段的环境增加一个人物
            if names.get(w.word) is None:#某人物（w.word）不在人物字典中
                names[w.word] = 0
                relationships[w.word] = {}
            names[w.word] += 1#输出人物出现次数统计结果

for line in lineNames:#对于lineNames中每一行，我们为该行中出现的所有人物两两相连。如果两个人物之间尚未有边建立，则将新建的边权值设为 1，否则将已存在的边的权值加 1。这种方法将产生很多的冗余边，这些冗余边将在最后处理。
    for name1 in line:
        for name2 in line:
            if name1 == name2:
                continue
            if relationships[name1].get(name2) is None:
                relationships[name1][name2] = 1
            else:
                relationships[name1][name2] = relationships[name1][name2] + 1

with codecs.open("People_node.csv", "w", "gbk") as f:
    f.write("ID Label Weight\r\n")
    for name, times in names.items():
        if times > 5:
            f.write(name + " " + name + " " + str(times) + "\r\n")
with codecs.open("People_edge.csv", "w", "gbk") as f:
    f.write("Source Target Weight\r\n")
    for name, edges in relationships.items():
        for v, w in edges.items():
            if w > 5:
                f.write(name + " " + v + " " + str(w) + "\r\n")
f=open('People_edge.csv','r',encoding='gbk')
f2=open('names.txt','r',encoding='gbk').read()
lines=f.readlines()
A=[]
for line in lines:
	A.append([])
	m=line.strip('\n').split(' ')
	for x in m:
		A[-1].append(x)
for items in A:
	if items[0]and items[1] not in f2:
		del(items)
f.close()
print(A) 
